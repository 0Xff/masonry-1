---

title: Options
category: docs
layout: default
root_path: ../
body_class: options
toc :
  - { title: animated, anchor: animated }
  - { title: animationOptions, anchor: animationoptions }
  - { title: columnWidth, anchor: columnwidth }
  - { title: gutterWidth, anchor: gutterwidth }
  - { title: itemSelector, anchor: itemselector }
  - { title: resizable, anchor: resizable }
  - { title: rtl, anchor: rtl }

---

<dl class="header clearfix">
  <dt><code>option</code></dt>
  <dd class="option-type">Type</dd>
  <dd class="default">Default</dd>
</dl>

## animated

<dl class="clearfix">
  <dt><code>animated</code></dt>
  <dd class="option-type">Boolean</dd>
  <dd class="default"><code><span class="kc">false</span></code></dd>
</dl>

Enables jQuery animation on layout changes. [See Docs: Animating](animating.html).

## animationOptions

<dl class="clearfix">
  <dt><code>animationOptions</code></dt>
  <dd class="option-type">Object</dd>
  <dd class="default"><code>{ queue: <span class="kc">false</span>, duration: <span class="mi">500</span> }</code></dd>
</dl>

Options used for jQuery animation. See the [jQuery API for animate options](http://api.jquery.com/animate/#animate-properties-options) for details.

## columnWidth

<dl class="clearfix">
  <dt><code>columnWidth</code></dt>
  <dd class="option-type">Integer</dd>
</dl>

Width in pixels of 1 column of your grid. If no columnWidth is specified, Masonry uses the width of the first item element.

**Recommended** if your layout has item elements that have multiple-column widths.

## gutterWidth

<dl class="clearfix">
  <dt><code>gutterWidth</code></dt>
  <dd class="option-type">Integer</dd>
  <dd class="default"><code><span class="mi">0</span></code></dd>
</dl>

Adds additional spacing between columns.

[See Demo: Gutters](../demos/gutters.html).

## itemSelector

<dl class="clearfix">
  <dt><code>itemSelector</code></dt>
  <dd class="option-type">String</dd>
</dl>

Filters item elements to selector. If not set, Masonry defaults to using the child elements of the container.

**Recommended** to avoid Masonry using any other hidden elements in its layout logic.

{% highlight javascript %}

$('#container').masonry({ itemSelector: '.box' });

{% endhighlight %}

## resizable

<dl class="clearfix">
  <dt><code>resizable</code></dt>
  <dd class="option-type">Boolean</dd>
  <dd class="default"><code><span class="kc">true</span></code></dd>
</dl>

Triggers layout logic when browser window is resized.

## rtl

<dl class="clearfix">
  <dt><code>rtl</code></dt>
  <dd class="option-type">Boolean</dd>
  <dd class="default"><code><span class="kc">false</span></code></dd>
</dl>

Enables right-to-left layout for languages like Hebrew and Arabic.

[See Demo: Right-to-left](../demos/right-to-left.html).